{"version":3,"sources":["logo.svg","utils/tokenService.js","utils/userService.js","components/SignupForm/SignupForm.jsx","pages/SignupPage/SignupPage.jsx","pages/LoginPage/LoginPage.jsx","utils/recipeService.js","components/RecipeBookEntries/RecipeBookEntries.jsx","pages/RecipeIndexPage/RecipeIndexPage.jsx","pages/LandingPage/LandingPage.jsx","components/RecipeEntryForm/RecipeEntryForm.jsx","pages/RecipeFormPage/RecipeFormPage.jsx","components/IngredientList/IngredientList.jsx","pages/RecipeDetailPage/RecipeDetailPage.jsx","components/RecipeUpdateForm/RecipeUpdateForm.jsx","pages/RecipeUpdatePage/RecipeUpdatePage.jsx","components/NavBar/NavBar.jsx","pages/App/App.js","reportWebVitals.js","index.js"],"names":["functions","setToken","token","localStorage","setItem","getToken","getUserFromToken","JSON","parse","atob","split","user","removeToken","removeItem","getItem","exp","Date","now","signup","fetch","BASE_URL","method","headers","Headers","body","stringify","then","res","ok","json","Error","tokenService","getUser","logout","login","creds","SignupForm","props","useState","name","setName","email","setEmail","password","setPassword","passwordConf","setPasswordConf","handleSubmit","e","a","preventDefault","console","log","userService","handleSignup","history","push","message","updateMessage","autoComplete","onSubmit","TextField","variant","label","onChange","target","value","type","placeholder","Button","color","disabled","to","SignupPage","setMessage","msg","LoginPage","handleLogin","alert","BOOK_URL","ENTRY_URL","index","createRecipeBook","options","createEntry","entry","getEntry","entryId","deleteEntry","_id","updateEntry","RecipeBookEntries","recipeEntry","className","category","src","image","alt","useStyles","makeStyles","theme","root","flexGrow","search","position","borderRadius","shape","backgroundColor","fade","palette","success","light","margin","width","searchIcon","padding","spacing","height","pointerEvents","display","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","breakpoints","up","RecipeIndexPage","classes","recipeBook","setRecipeBook","useEffect","loadRecipeBook","updateRecipeBook","updatedBook","filter","recipeService","recipeEntries","currentRecipeBookEntries","filterRecipes","recipe","length","handleFilterClick","id","innerHTML","ButtonGroup","aria-label","onClick","InputBase","input","inputProps","reg","RegExp","searchResult","match","map","idx","key","LandingPage","book","difficulties","categories","RecipeEntryForm","ingredients","setIngredients","directions","setDirections","setCategory","difficulty","setDifficulty","prepTime","setPrepTime","cookTime","setCookTime","servings","setServings","cuisineType","setCuisineType","setImage","addEntry","helperText","select","option","MenuItem","multiline","rows","FormControl","InputLabel","htmlFor","aria-describedby","FormHelperText","RecipeFormPage","maxWidth","background","paper","IngredientList","React","checked","setChecked","handleToggle","currentIndex","indexOf","newChecked","splice","List","labelId","ListItem","role","undefined","dense","button","ListItemIcon","Checkbox","edge","tabIndex","disableRipple","ListItemText","primary","RecipeDetailPage","setRecipe","loadRecipe","params","recipeDetail","handleDelete","imageDisplay","href","RecipeUpdateForm","getRecipeEntryState","join","ingredientsArr","shrink","shrin","RecipeUpdatePage","NavBar","nav","handleLogout","activeClassName","App","setUser","handleSignupOrLogin","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.942df717.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const functions = {\n  setToken,\n  getToken,\n  getUserFromToken,\n  removeToken\n};\n\nexport default functions\n\nfunction setToken(token) {\n    localStorage.setItem('token', token);\n}\n\nfunction getToken() {\n  let token = localStorage.getItem('token');\n  if (token) {\n    // Check if expired, remove if it is\n    const payload = JSON.parse(atob(token.split('.')[1]));\n    // JWT's exp is expressed in seconds, not milliseconds, so convert\n    if (payload.exp < Date.now() / 1000) {\n      localStorage.removeItem('token');\n      token = null;\n    }\n  }\n  return token;\n}\n\nfunction getUserFromToken () {\n  const token = getToken();\n  return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n}\n\nfunction removeToken() {\n  localStorage.removeItem('token');\n}","import tokenService from './tokenService';\n\nconst functions = {\n  signup,\n  getUser,\n  logout,\n  login\n}; \n\nexport default functions\n\nconst BASE_URL = '/api/users/';\n\nfunction signup(user) {\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(user)\n  })\n  .then(res => {\n    if (res.ok) return res.json();\n    // Probably a duplicate email\n    throw new Error('There was an error - possibly Email already taken!');\n  })\n   // Parameter destructuring!\n   .then(({ token }) => {\n    tokenService.setToken(token);\n   });\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + 'login', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(creds)\n  })\n  .then(res => {\n    // Valid login if we have a status of 2xx (res.ok)\n    if (res.ok) return res.json();\n    throw new Error('Bad Credentials!');\n  })\n  .then(({token}) => tokenService.setToken(token));\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}","import React, {useState} from 'react';\nimport { Link } from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport userService from '../../utils/userService';\n\nfunction SignupForm (props) {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [passwordConf, setPasswordConf] = useState('');\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            console.log( 'Email:', email, 'Password: ', password); \n            await userService.signup({name, email, password, passwordConf});\n            // Let <App> know a user has signed up!\n            props.handleSignup();\n            // Successfully signed up - show root page\n            props.history.push('/');\n        } catch (err) {\n            console.log(err.message)\n            // Invalid user data (probably duplicate email)\n            props.updateMessage(err.message);\n        }        \n    }\n\n    const isFormInvalid = () => {\n        return !(name && email && password === passwordConf);\n    }\n\n    return (\n        <>\n            <h1>Signup</h1>\n            <br/>\n            <br/>\n            <form autoComplete=\"off\" onSubmit={handleSubmit}>\n                <TextField \n                    variant=\"filled\"\n                    label=\"Name\"\n                    onChange={e => setName(e.target.value)}\n                />\n                <TextField \n                    variant=\"filled\"\n                    type=\"email\"\n                    label=\"Email\"\n                    placeholder=\"example@email.com\"\n                    onChange={e => setEmail(e.target.value)}\n                />\n                <TextField\n                    type=\"password\" \n                    variant=\"filled\"\n                    label=\"Password\"\n                    onChange={e => setPassword(e.target.value)}\n                />\n                <TextField\n                    type=\"password\" \n                    variant=\"filled\"\n                    label=\"Confirm Password\"\n                    onChange={e => setPasswordConf(e.target.value)}\n                />\n                <div>\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={isFormInvalid()}>Submit</Button>\n                    <Link to='/'>Cancel</Link>\n                </div>                \n            </form>\n\n        </>\n    )\n}\n\nexport default SignupForm;","import React, {useState} from 'react';\nimport SignupForm from '../../components/SignupForm/SignupForm';\n\nfunction SignupPage (props) {\n    const [message, setMessage] = useState('');\n\n    const updateMessage = (msg) => {\n        setMessage(msg);\n    }\n\n    return (\n        <div>\n            <SignupForm {...props} updateMessage={updateMessage} />\n            <p>{message}</p>\n        </div>\n    )\n}\n\nexport default SignupPage;","import React, {useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport userService from '../../utils/userService';\n\nfunction LoginPage (props) {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            await userService.login({email, password});\n            props.handleLogin();\n            props.history.push('/');\n        } catch (err) {\n            // Try and use a modal or toast instead of an alert\n            alert('Invalid Credentials!');\n        }\n    }\n\n    return (\n        <>\n            <h1>Login</h1>\n            <br/><br/>\n            <form autoComplete=\"off\" onSubmit={handleSubmit}>\n                <TextField \n                    variant=\"filled\"\n                    type=\"email\"\n                    label=\"Email\"\n                    placeholder=\"example@email.com\"\n                    onChange={e => setEmail(e.target.value)}\n                />\n                <TextField\n                    type=\"password\" \n                    variant=\"filled\"\n                    label=\"Password\"\n                    onChange={e => setPassword(e.target.value)}\n                />\n                <div>\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\" >Login</Button>\n                    <Link to='/'>Cancel</Link>\n                </div>   \n            </form>\n        </>\n    )\n}\n\nexport default LoginPage;","import tokenService from './tokenService';\n\nconst BOOK_URL = '/api/recipeBooks/';\nconst ENTRY_URL = '/api/entries/';\n\nconst functions = {\n    index,\n    createRecipeBook,\n    createEntry,\n    getEntry,\n    deleteEntry,\n    updateEntry\n}\n\nexport default functions\n\nfunction index() {\n    return fetch(BOOK_URL, {\n        method: 'GET',\n        headers: {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer ' + tokenService.getToken()\n          }\n    }).then(res => res.json());\n}\n  \nfunction createRecipeBook(user) {\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        'Authorization': 'Bearer ' + tokenService.getToken()\n      },\n      body: JSON.stringify(user)\n    };\n    return fetch(BOOK_URL, options).then(res => res.json());\n}\n\nfunction createEntry(entry) {\n  const options = {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        'Authorization': 'Bearer ' + tokenService.getToken()\n      },\n      body: JSON.stringify(entry)\n  };\n  return fetch(ENTRY_URL, options).then(res => res.json());  \n}\n\nfunction getEntry(entryId) {\n  return fetch(`${ENTRY_URL}${entryId}`, {\n        method: 'GET',\n        headers: {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer ' + tokenService.getToken()\n          }\n  }).then(res => res.json());\n}\n\nfunction deleteEntry(entry) {\n  console.log('recipe service entry: ' + entry)\n  console.log('recipe service entry id: ' + entry._id)\n  const options = {\n      method: 'DELETE',\n      headers: {\n        'Content-type': 'application/json',\n        'Authorization': 'Bearer ' + tokenService.getToken()\n      },\n      body: JSON.stringify(entry)\n  };\n  return fetch(`${ENTRY_URL}${entry._id}`, options).then(res => res.json()); \n}\n\nfunction updateEntry(entry){\n  console.log('recipe service entry: ' + entry)\n  console.log('recipe service entry id: ' + entry.entryId)\n  const options = {\n    method: 'PUT',\n    headers: {\n      'Content-type': 'application/json',\n      'Authorization': 'Bearer ' + tokenService.getToken()\n    },\n    body: JSON.stringify(entry)\n  };\n  return fetch(`${ENTRY_URL}${entry.entryId}`, options).then(res => res.json());  \n}","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport '../RecipeBookEntries/RecipeBookEntries.css';\n\nfunction RecipeBookEntries(props) {\n\n    return (\n      <>\n        <Link to={`/recipebook/${props.recipeEntry._id}`} >\n          <div className=\"entry-container\">\n            <div>\n              <h2>{props.recipeEntry.name}</h2>\n              <span className='category'>{props.recipeEntry.category}</span>\n            </div>\n            <img src={props.recipeEntry.image || \"https://cdn1.vectorstock.com/i/thumb-large/49/10/cartoon-dachshund-chef-with-a-spoon-vector-19784910.jpg\"}  alt=\"food\"/>\n\n          </div>\n        </Link>\n      </>\n    )\n\n}\n\nexport default RecipeBookEntries;","import React, {useState, useEffect} from 'react';\nimport {Link} from 'react-router-dom';\nimport './RecipeIndexPage.css';\nimport recipeService from '../../utils/recipeService';\nimport RecipeBookEntries from '../../components/RecipeBookEntries/RecipeBookEntries';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.success.light, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.success.light, 0.25),\n    },\n    margin: '0 auto',\n    width: '50%',\n    // [theme.breakpoints.up('sm')]: {\n    //   marginLeft: theme.spacing(1),\n    //   width: 'auto',\n    // },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch',\n      },\n    },\n  },\n}));\n\nfunction RecipeIndexPage(props) {\n    const classes = useStyles();\n    const [recipeBook, setRecipeBook] = useState('');\n\n    useEffect(() => {\n        if (!recipeBook) return loadRecipeBook();\n    })\n\n  // I don't need this yet but it's here for updating state after CRUD if needed\n    const updateRecipeBook = (updatedBook) => {\n        setRecipeBook({ updatedBook })\n    }\n\n    // filter is the value passed in from handleFilterClick\n    const loadRecipeBook = async (filter) => {\n        let currentRecipeBookEntries = await recipeService.index().then(res => res.recipeEntries);\n\n        // check for filters being passed in and filter the recipe book accordingly\n        // replace alerts with toast or modal on final product\n        if (filter === \"BREAKFAST\") {\n            let filterRecipes = currentRecipeBookEntries.filter(recipe =>\n                recipe.category === \"Breakfast\")\n                console.log(filterRecipes)\n                if (filterRecipes.length > 0) {\n                    return setRecipeBook(filterRecipes)\n                } else {\n                    alert('no Breakfast recipes')\n                }\n        }\n        else if (filter === \"LUNCH\") {\n            let filterRecipes = currentRecipeBookEntries.filter(recipe =>\n                recipe.category === \"Lunch\")\n                if (filterRecipes.length > 0) {\n                    return setRecipeBook(filterRecipes)\n                } else {\n                    alert('no Lunch recipes')\n                }\n        }\n        else if (filter === \"DINNER\") {\n            let filterRecipes = currentRecipeBookEntries.filter(recipe =>\n                recipe.category === \"Dinner\")\n                if (filterRecipes.length > 0) {\n                    return setRecipeBook(filterRecipes)\n                } else {\n                    alert('no Dinner recipes')\n                }\n        }\n        else if (filter === \"TREAT\") {\n            let filterRecipes = currentRecipeBookEntries.filter(recipe =>\n                recipe.category === \"Treat\")\n                if (filterRecipes.length > 0) {\n                    return setRecipeBook(filterRecipes)\n                } else {\n                    alert('no Treat recipes')\n                }\n        }\n        // no filter just set the whole recipe book\n        setRecipeBook(currentRecipeBookEntries);\n    }\n\n    const handleFilterClick = (e) => {\n        // pass either target.id or target.innerHTML to loadRecipeBook\n        // this way no matter where on the button is clicked the correct target will be captured\n        loadRecipeBook(e.target.id || e.target.innerHTML)\n    }\n\n    // search for recipes based on whats entered in the search bar. \n    // On the spot search using recipeBook from current state (including filtered results)\n    // ***REMOVE CONSOLE LOGS\n    // probably a more efficient way to do this...  store a default book in state?\n    const handleSearch = (e) => {\n        let reg = new RegExp(e.target.value,'gi')  //create regExp based on e.target.value to match below\n        let searchResult = recipeBook.filter(recipe => recipe.name.match(reg));\n\n        // if searchResult has elements set it to state otherwise just load default recipe book\n        searchResult.length > 0 ? setRecipeBook(searchResult) : loadRecipeBook()\n    }\n\n    if(recipeBook && recipeBook.length > 0) {\n        return (\n            <div>\n                <h1>{props.user.name}'s Recipe Book</h1>\n                <Link to='/recipeform'>Create New Recipe</Link>\n                <br />\n\n                <div className='page-container'>\n                    <div>\n                        <ButtonGroup aria-label=\"recipe filter button group\">\n                        <Button id=\"ALLRECIPES\" onClick={handleFilterClick}>ALL RECIPES</Button>\n                        <Button id=\"BREAKFAST\" onClick={handleFilterClick}>BREAKFAST</Button>\n                        <Button id=\"LUNCH\" onClick={handleFilterClick}>LUNCH</Button>\n                        <Button id=\"DINNER\" onClick={handleFilterClick}>DINNER</Button>\n                        <Button id=\"TREAT\" onClick={handleFilterClick}>TREAT</Button>\n                        </ButtonGroup>\n                    </div>\n                    <div className={classes.search}>\n                        <div className={classes.searchIcon}>\n                            <SearchIcon />\n                        </div>\n                        <InputBase\n                            placeholder=\"Search…\"\n                            classes={{\n                                root: classes.inputRoot,\n                                input: classes.inputInput,\n                            }}\n                            inputProps={{ 'aria-label': 'search' }}\n                            onChange={handleSearch}\n                        />\n                    </div>\n                    {recipeBook.map((entry, idx) => (\n                        <RecipeBookEntries\n                            recipeEntry={entry}\n                            updateRecipeBook={updateRecipeBook}\n                            {...props}\n                            key={idx}\n                        />   \n                    ))}\n                </div>\n            </div>\n        )\n    }\n    return (\n        <>\n        <h1>{props.user.name}'s Recipe Book</h1>\n        <Link to='/recipeform'>You have no recipes. Add one!</Link>\n        </>\n    )\n\n}\n\nexport default RecipeIndexPage;","import React from 'react';\nimport {Link} from 'react-router-dom'\n\nfunction LandingPage(props) {\n    let book = props.user ? \n      <>\n        <h1>Krispy Kreations</h1>\n        <Link to='/recipebook'>Recipe Book</Link>\n      </>\n      : \n      <h1>Krispy Kreations</h1>\n\n    return (\n        <div>\n            {/* Either link to user recipe book or title heading */}\n            { book }\n        </div>\n        \n    )\n}\n\nexport default LandingPage;","import React, {useState} from 'react';\nimport { Link } from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport OutlinedInput from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport recipeService from '../../utils/recipeService';\n\nconst difficulties = [\n    {\n        value: 'Easy',\n        label: 'Easy'\n    },\n    {\n        value: 'Medium',\n        label: 'Medium'\n    },\n    {\n        value: 'Hard',\n        label: 'Hard'\n    }\n];\n\nconst categories = [\n    {\n        value: 'Breakfast',\n        label: 'Breakfast'\n    },\n    {\n        value: 'Lunch',\n        label: 'Lunch'\n    },\n    {\n        value: 'Dinner',\n        label: 'Dinner'\n    },\n    {\n        value: 'Treat',\n        label: 'Treat'\n    }\n];\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: '25ch',\n      },\n    },\n  }));\n\nfunction RecipeEntryForm (props) {\n    const classes = useStyles();\n    const [name, setName] = useState('');\n    const [ingredients, setIngredients] = useState('');\n    const [directions, setDirections] = useState('')\n    const [category, setCategory] = useState('Treat');\n    const [difficulty, setDifficulty] = useState('Medium');\n    const [prepTime, setPrepTime] = useState(null);\n    const [cookTime, setCookTime] = useState(null);\n    const [servings, setServings] = useState(null);\n    const [cuisineType, setCuisineType] = useState('');\n    const [image, setImage] = useState('');\n\n    const addEntry = async(e) => {\n        e.preventDefault();\n        try{\n            await recipeService.createEntry({\n                name,\n                ingredients,\n                directions,\n                category,\n                difficulty,\n                prepTime,\n                cookTime,\n                servings,\n                cuisineType,\n                image\n            });\n            props.history.push('/recipebook');\n        } catch(err) {\n            console.log(err)\n            props.updateMessage(err.message);\n        }\n    }\n\n    const isFormInvalid = () => {\n        return !(name && ingredients && directions && category);\n    }\n\n    return (\n        <div>\n            <h1>Recipe Form</h1>\n            <br />\n            <br />\n            <form className={classes.root} autoComplete=\"off\" onSubmit={addEntry}>\n                <TextField \n                    label=\"Name\"\n                    onChange={e => setName(e.target.value)}\n                />\n                <TextField \n                    label=\"Cuisine\"\n                    onChange={e => setCuisineType(e.target.value)}\n                    helperText=\"Optional\"\n                    placeholder=\"Caribbean\"\n                />\n                <br /><br />\n                <TextField\n                    select \n                    label=\"Category\"\n                    value={category}\n                    onChange={e => setCategory(e.target.value)}\n                    helperText=\"Please select the category\"\n                >\n                    {categories.map((option) => (\n                        <MenuItem key={option.value} value={option.value}>\n                        {option.label}\n                        </MenuItem>\n                    ))}\n                </TextField>\n                <TextField\n                    select \n                    label=\"Difficulty\"\n                    value={difficulty}\n                    onChange={e => setDifficulty(e.target.value)}\n                    helperText=\"Please select the difficulty\"\n                >\n                    {difficulties.map((option) => (\n                        <MenuItem key={option.value} value={option.value}>\n                        {option.label}\n                        </MenuItem>\n                    ))}\n                </TextField>\n                <br /><br />\n                <TextField\n                    variant=\"outlined\"\n                    label=\"Ingredients\"\n                    multiline\n                    rows={4}\n                    placeholder=\"1 cup of LOVE\"\n                    helperText=\"Add a new ingredient on a new line (press enter to add line)\"\n                    onChange={e => setIngredients(e.target.value.split('\\n'))}\n                />\n                <TextField\n                    variant=\"outlined\"\n                    label=\"Directions\"\n                    multiline\n                    rows={4}\n                    onChange={e => setDirections(e.target.value)}\n                />\n                <br /><br />\n                <FormControl>\n                    <InputLabel htmlFor=\"prep-time\">Prep Time</InputLabel>\n                    <OutlinedInput id=\"prep-time\" type=\"number\" onChange={e => setPrepTime(e.target.value)} aria-describedby=\"prep-helper-text\" />\n                    <FormHelperText id=\"prep-helper-text\">Enter prep time in minutes</FormHelperText>\n                </FormControl>\n                <FormControl>\n                    <InputLabel htmlFor=\"cook-time\">Cook Time</InputLabel>\n                    <OutlinedInput id=\"cook-time\" type=\"number\" onChange={e => setCookTime(e.target.value)} aria-describedby=\"cook-helper-text\" />\n                    <FormHelperText id=\"cook-helper-text\">Enter cook time in minutes</FormHelperText>\n                </FormControl>\n                <FormControl>\n                    <InputLabel htmlFor=\"serving-size\">Serving Size</InputLabel>\n                    <OutlinedInput id=\"serving-size\" type=\"number\" onChange={e => setServings(e.target.value)} aria-describedby=\"serving-helper-text\" />\n                    <FormHelperText id=\"serving-helper-text\">Enter serving size</FormHelperText>\n                </FormControl>\n                <br />\n                <FormControl>\n                    <InputLabel htmlFor=\"image-url\">Image</InputLabel>\n                    <OutlinedInput id=\"image-url\" type=\"text\" onChange={e => setImage(e.target.value)} aria-describedby=\"image-helper-text\" />\n                    <FormHelperText id=\"image-helper-text\">Enter URL of image location</FormHelperText>\n                </FormControl>\n                <div>\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={isFormInvalid()}>Submit</Button>\n                    <Link to='/recipebook'>Cancel</Link>\n                </div>  \n            </form>\n        </div>\n    )\n}\n\nexport default RecipeEntryForm;","import React, {useState} from 'react';\nimport RecipeEntryForm from '../../components/RecipeEntryForm/RecipeEntryForm';\n\nfunction RecipeFormPage (props) {\n    const [message, setMessage] = useState('');\n\n    const updateMessage = (msg) => {\n        setMessage(msg);\n    }\n\n    return (\n        <div>\n            <RecipeEntryForm {...props} updateMessage={updateMessage} />\n            <p>{message}</p>\n        </div>\n    )\n\n}\n\nexport default RecipeFormPage;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function IngredientList({ingredients}) {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([0]);\n\n  const handleToggle = (value) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  return (\n    <List className={classes.root}>\n      {ingredients.map((value) => {\n        const labelId = `checkbox-list-label-${value}`;\n\n        return (\n          <ListItem key={value} role={undefined} dense button onClick={handleToggle(value)}>\n            <ListItemIcon>\n              <Checkbox\n                edge=\"start\"\n                checked={checked.indexOf(value) !== -1}\n                tabIndex={-1}\n                disableRipple\n                inputProps={{ 'aria-labelledby': labelId }}\n              />\n            </ListItemIcon>\n            <ListItemText id={labelId} primary={value} />\n\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n}","import React, {useEffect, useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport './RecipeDetailPage.css';\nimport recipeService from '../../utils/recipeService';\nimport IngredientList from '../../components/IngredientList/IngredientList';\nimport Button from '@material-ui/core/Button';\n\n\n\nexport default function RecipeDetailPage({match, history, user}) {\n    const [recipe, setRecipe] = useState('')\n    const [ingredients, setIngredients] = useState([])\n    \n    useEffect(() => {\n        if(!recipe) return loadRecipe(match.params.id);\n    })\n\n    const loadRecipe = async (params) => {\n        try {\n        const recipeDetail = await recipeService.getEntry(params);\n        setRecipe(recipeDetail);\n        setIngredients(recipeDetail.ingredients);\n        }catch (err) {\n            console.log('ERROR: ' + err.message);\n        }\n    }\n\n    const handleDelete = async (e) => {\n        await recipeService.deleteEntry(recipe)\n        history.push('/recipebook')\n    }\n\n    // if user's recipe has an image display it otherwise line break\n    const imageDisplay = (recipe.image) ? <img src={recipe.image}  alt=\"food\"/> : <br />\n\n    return (\n        <>\n            <h1>{user.name}'s Recipe Book</h1>\n            <Link to='/recipeform'>Create New Recipe</Link>\n\n            <div className='page-container'>\n                <h1>Detail Page</h1>\n                <Link to=\"/recipebook\">Back</Link>\n                <h2>{recipe.name}</h2>\n                <h4>{recipe.category}</h4>\n                <p>{recipe.cuisineType}</p>\n                <br />\n                {imageDisplay}\n                <IngredientList ingredients={ingredients} />\n\n            \n\n                <p>Prep Time: {recipe.prepTime || 'N/A'} Cook Time:{recipe.cookTime || 'N/A'} </p>\n                <p>Serving Size: {recipe.servings}</p>\n                <p>Difficulty: {recipe.difficulty}</p>\n                <br />\n                <br />\n                <h3>Directions</h3>\n                <p>{recipe.directions}</p>\n                <Button variant=\"contained\" color=\"secondary\" onClick={handleDelete}>\n                    DELETE\n                </Button>\n                <Button variant=\"contained\" href={`/recipe/edit/${recipe._id}`}>Update</Button>\n            </div>\n        </>\n    )\n}\n","import React, {useState, useEffect} from 'react';\nimport { Link } from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport OutlinedInput from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport recipeService from '../../utils/recipeService';\n\nconst difficulties = [\n    {\n        value: 'Easy',\n        label: 'Easy'\n    },\n    {\n        value: 'Medium',\n        label: 'Medium'\n    },\n    {\n        value: 'Hard',\n        label: 'Hard'\n    }\n];\n\nconst categories = [\n    {\n        value: 'Breakfast',\n        label: 'Breakfast'\n    },\n    {\n        value: 'Lunch',\n        label: 'Lunch'\n    },\n    {\n        value: 'Dinner',\n        label: 'Dinner'\n    },\n    {\n        value: 'Treat',\n        label: 'Treat'\n    }\n];\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: '25ch',\n      },\n    },\n}));\n\nexport default function RecipeUpdateForm({match, history, updateMessage}) {\n    const classes = useStyles();\n    const [name, setName] = useState('');\n    const [ingredients, setIngredients] = useState('');\n    const [directions, setDirections] = useState('')\n    const [category, setCategory] = useState('Treat');\n    const [difficulty, setDifficulty] = useState('Medium');\n    const [prepTime, setPrepTime] = useState(null);\n    const [cookTime, setCookTime] = useState(null);\n    const [servings, setServings] = useState(null);\n    const [cuisineType, setCuisineType] = useState('');\n    const [image, setImage] = useState('');\n\n    // store param id to pass into the updateEntry function\n    // use this for routing purposes and to link back to detail page\n    const entryId = match.params.id;\n\n    const getRecipeEntryState = async () => {\n        recipeService.getEntry(match.params.id)\n        .then(entry => {\n            setName(entry.name)\n            setIngredients(entry.ingredients.join('\\n'))\n            setDirections(entry.directions)\n            setCategory(entry.category)\n            setDifficulty(entry.difficulty)\n            setPrepTime(entry.prepTime)\n            setCookTime(entry.cookTime)\n            setServings(entry.servings)\n            setCuisineType(entry.cuisineType)\n            setImage(entry.image)\n        })\n    }\n\n    // after initial load set state to previous recipe values\n    useEffect(() => {\n        return getRecipeEntryState();\n    }, [])\n\n    const updateEntry = async(e) => {\n        e.preventDefault();\n        let ingredientsArr = ingredients.split('\\n') // convert string of ingredients to array of ingredient strings\n        try{\n            await recipeService.updateEntry({\n                name,\n                ingredients: ingredientsArr,\n                directions,\n                category,\n                difficulty,\n                prepTime,\n                cookTime,\n                servings,\n                cuisineType,\n                image,\n                entryId\n            });\n            history.push(`/recipebook/${entryId}`);\n        } catch (err) {\n            console.log(`Error: ${err.message}`)\n            updateMessage(err.message);\n        }\n    }\n\n    const isFormInvalid = () => {\n        return !(name && ingredients && directions && category);\n    }\n\n    return (\n        <>\n            <h3>Update Form</h3>\n            <br />\n            <br />\n            <form className={classes.root} autoComplete=\"off\" onSubmit={updateEntry}>\n                <TextField \n                    label=\"Name\"\n                    value={name}\n                    onChange={e => setName(e.target.value)}\n                />\n                <TextField \n                    label=\"Cuisine\"\n                    onChange={e => setCuisineType(e.target.value)}\n                    helperText=\"Optional\"\n                    placeholder=\"Caribbean\"\n                    value={cuisineType || ''}\n                />\n                <br /><br />\n                <TextField\n                    select \n                    label=\"Category\"\n                    value={category}\n                    onChange={e => setCategory(e.target.value)}\n                    helperText=\"Please select the category\"\n                >\n                    {categories.map((option) => (\n                        <MenuItem key={option.value} value={option.value}>\n                        {option.label}\n                        </MenuItem>\n                    ))}\n                </TextField>\n                <TextField\n                    select \n                    label=\"Difficulty\"\n                    value={difficulty}\n                    onChange={e => setDifficulty(e.target.value)}\n                    helperText=\"Please select the difficulty\"\n                >\n                    {difficulties.map((option) => (\n                        <MenuItem key={option.value} value={option.value}>\n                        {option.label}\n                        </MenuItem>\n                    ))}\n                </TextField>\n                <br /><br />\n                <TextField\n                    variant=\"outlined\"\n                    label=\"Ingredients\"\n                    multiline\n                    rows={4}\n                    value={ingredients}\n                    // placeholder=\"previously stored ingredients will be replaced with what you enter now or remain unchanged if you do not type anything\"\n                    helperText=\"Add a new ingredient on a new line (press enter to add line)\"\n                    onChange={e => setIngredients(e.target.value)}\n                />\n                <TextField\n                    variant=\"outlined\"\n                    label=\"Directions\"\n                    multiline\n                    rows={4}\n                    onChange={e => setDirections(e.target.value)}\n                    value={directions}\n                />\n                <br /><br />\n                <FormControl>\n                    <InputLabel htmlFor=\"prep-time\" shrink>Prep Time</InputLabel>\n                    <OutlinedInput\n                     id=\"prep-time\" \n                     type=\"number\" \n                     onChange={e => setPrepTime(e.target.value)} \n                     value={prepTime || ''} \n                     aria-describedby=\"prep-helper-text\" />\n                    <FormHelperText id=\"prep-helper-text\">Enter prep time in minutes</FormHelperText>\n                </FormControl>\n                <FormControl>\n                    <InputLabel htmlFor=\"cook-time\" shrink>Cook Time</InputLabel>\n                    <OutlinedInput\n                     id=\"cook-time\" \n                     type=\"number\" \n                     onChange={e => setCookTime(e.target.value)} \n                     value={cookTime || ''} \n                     aria-describedby=\"cook-helper-text\" />\n                    <FormHelperText id=\"cook-helper-text\">Enter cook time in minutes</FormHelperText>\n                </FormControl>\n                <FormControl>\n                    <InputLabel htmlFor=\"serving-size\" shrink>Serving Size</InputLabel>\n                    <OutlinedInput\n                     id=\"serving-size\" \n                     type=\"number\" \n                     onChange={e => setServings(e.target.value)} \n                     value={servings || ''} \n                     aria-describedby=\"serving-helper-text\" />\n                    <FormHelperText id=\"serving-helper-text\">Enter serving size</FormHelperText>\n                </FormControl>\n                <br />\n                <FormControl>\n                    <InputLabel htmlFor=\"image-url\" shrin>Image</InputLabel>\n                    <OutlinedInput \n                     id=\"image-url\"\n                     type=\"text\" \n                     onChange={e => setImage(e.target.value)} \n                     value={image || ''}\n                     aria-describedby=\"image-helper-text\" />\n                    <FormHelperText id=\"image-helper-text\">Enter URL of image location</FormHelperText>\n                </FormControl>\n                <div>\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={isFormInvalid()}>Submit</Button>\n                    <Link to={`/recipebook/${entryId}`}>Cancel</Link>\n                </div>  \n            </form>\n        </>\n    )\n}","import React, {useState} from 'react';\nimport RecipeUpdateForm from '../../components/RecipeUpdateForm/RecipeUpdateForm';\n\nexport default function RecipeUpdatePage(props) {\n    const [message, setMessage] = useState('');\n\n    const updateMessage = (msg) => {\n        setMessage(msg);\n    }\n\n    return (\n        <>\n        <h1>Update Recipe</h1>\n        <RecipeUpdateForm {...props} updateMessage={updateMessage} />\n        <p>{message}</p>\n        </>\n    )\n}","import React from 'react';\nimport { NavLink, Link } from 'react-router-dom';\nimport './NavBar.css';\n\nconst NavBar = (props) => {\n    let nav = props.user ?\n        <div>\n        <Link to='/login' className='NavBar-link' onClick={props.handleLogout}>LOG OUT</Link>\n        &nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;\n        <span className='NavBar-welcome'>WELCOME, {props.user.name}</span>\n        {/* <NavLink to='/' className='NavBar-link' activeClassName='selected'><strong>+</strong>ADD Recipe</NavLink> */}\n      </div>\n      :\n      <div>\n        <NavLink to='/login' className='NavBar-link' activeClassName=\"selected\">LOG IN</NavLink>\n        &nbsp;&nbsp;|&nbsp;&nbsp;\n        <NavLink to='/signup' className='NavBar-link' activeClassName=\"selected\">SIGN UP</NavLink>\n      </div>;\n\n    return (\n        <>\n            {nav}\n        </>\n    )\n}\n\nexport default NavBar;","import logo from '../../logo.svg';\nimport './App.css';\nimport React, { useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n// import pages\nimport SignupPage from '../SignupPage/SignupPage';\nimport LoginPage from '../LoginPage/LoginPage';\nimport RecipeIndexPage from '../RecipeIndexPage/RecipeIndexPage';\nimport LandingPage from '../LandingPage/LandingPage';\nimport RecipeFormPage from '../RecipeFormPage/RecipeFormPage';\nimport RecipeDetailPage from '../RecipeDetailPage/RecipeDetailPage';\nimport RecipeUpdatePage from '../RecipeUpdatePage/RecipeUpdatePage';\n// import components\nimport NavBar from '../../components/NavBar/NavBar';\n// import utilities\nimport userService from '../../utils/userService';\n\nfunction App() {\n  const [user, setUser] = useState(userService.getUser());\n\n  const handleSignupOrLogin = () => {\n    setUser(userService.getUser());\n  }\n\n  const handleLogout = () => {\n    userService.logout();\n    setUser(null);\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <NavBar\n          user={user}\n          handleLogout={handleLogout}\n        />\n      </header>\n      <Switch>\n        <Route exact path='/' render={({ history }) => (\n          <LandingPage\n            history={history}\n            user={user}\n          />\n        )}/>\n        <Route exact path='/signup' render={({ history }) => (\n          <SignupPage \n            history={history}\n            handleSignup={handleSignupOrLogin}\n            user={user}\n          />\n        )}/>\n        <Route exact path='/login' render={({ history }) => (\n          <LoginPage\n            history={history}\n            handleLogin={handleSignupOrLogin}\n          />\n        )}/>\n        <Route exact path='/recipebook' render={({ history }) => (\n          <RecipeIndexPage\n            history={history}\n            user={user}\n          />\n        )}/>\n        <Route path=\"/recipebook/:id\" render={props => \n          <RecipeDetailPage \n            {...props}\n            user={user}\n          />\n        }/>\n        <Route exact path='/recipeform' render={({ history }) => (\n          <RecipeFormPage\n            history={history}\n            user={user}\n          />\n        )}/>\n        <Route exact path='/recipe/edit/:id' render={props =>\n          <RecipeUpdatePage\n            {...props}\n            user={user}\n          />\n        }/>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './pages/App/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router><App /></Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}