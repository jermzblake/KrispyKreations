[{"/home/jermzblake/mycode/projects/krispykreations/src/index.js":"1","/home/jermzblake/mycode/projects/krispykreations/src/reportWebVitals.js":"2","/home/jermzblake/mycode/projects/krispykreations/src/pages/App/App.js":"3","/home/jermzblake/mycode/projects/krispykreations/src/components/NavBar/NavBar.jsx":"4","/home/jermzblake/mycode/projects/krispykreations/src/pages/SignupPage/SignupPage.jsx":"5","/home/jermzblake/mycode/projects/krispykreations/src/components/SignupForm/SignupForm.jsx":"6","/home/jermzblake/mycode/projects/krispykreations/src/utils/userService.js":"7","/home/jermzblake/mycode/projects/krispykreations/src/utils/tokenService.js":"8","/home/jermzblake/mycode/projects/krispykreations/src/pages/LoginPage/LoginPage.jsx":"9","/home/jermzblake/mycode/projects/krispykreations/src/utils/recipeService.js":"10","/home/jermzblake/mycode/projects/krispykreations/src/pages/LandingPage/LandingPage.jsx":"11","/home/jermzblake/mycode/projects/krispykreations/src/pages/RecipeFormPage/RecipeFormPage.jsx":"12","/home/jermzblake/mycode/projects/krispykreations/src/components/RecipeEntryForm/RecipeEntryForm.jsx":"13","/home/jermzblake/mycode/projects/krispykreations/src/components/RecipeBookEntries/RecipeBookEntries.jsx":"14","/home/jermzblake/mycode/projects/krispykreations/src/pages/RecipeIndexPage/RecipeIndexPage.jsx":"15","/home/jermzblake/mycode/projects/krispykreations/src/pages/RecipeDetailPage/RecipeDetailPage.jsx":"16"},{"size":587,"mtime":1610662262640,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1610659218378,"results":"19","hashOfConfig":"18"},{"size":2206,"mtime":1612643400786,"results":"20","hashOfConfig":"18"},{"size":864,"mtime":1611001952338,"results":"21","hashOfConfig":"18"},{"size":427,"mtime":1611000306582,"results":"22","hashOfConfig":"18"},{"size":2499,"mtime":1612718515183,"results":"23","hashOfConfig":"18"},{"size":1123,"mtime":1611609716745,"results":"24","hashOfConfig":"18"},{"size":757,"mtime":1611434322439,"results":"25","hashOfConfig":"18"},{"size":1586,"mtime":1611179860602,"results":"26","hashOfConfig":"18"},{"size":1372,"mtime":1612722666742,"results":"27","hashOfConfig":"18"},{"size":447,"mtime":1612565958499,"results":"28","hashOfConfig":"18"},{"size":456,"mtime":1612565958500,"results":"29","hashOfConfig":"18"},{"size":6120,"mtime":1612565958486,"results":"30","hashOfConfig":"18"},{"size":724,"mtime":1612642351586,"results":"31","hashOfConfig":"18"},{"size":2249,"mtime":1612642521240,"results":"32","hashOfConfig":"18"},{"size":918,"mtime":1612722693591,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"u0crha",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/jermzblake/mycode/projects/krispykreations/src/index.js",[],["70","71"],"/home/jermzblake/mycode/projects/krispykreations/src/reportWebVitals.js",[],"/home/jermzblake/mycode/projects/krispykreations/src/pages/App/App.js",["72"],"import logo from '../../logo.svg';\nimport './App.css';\nimport React, { useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n// import pages\nimport SignupPage from '../SignupPage/SignupPage';\nimport LoginPage from '../LoginPage/LoginPage';\nimport RecipeIndexPage from '../RecipeIndexPage/RecipeIndexPage';\nimport LandingPage from '../LandingPage/LandingPage';\nimport RecipeFormPage from '../RecipeFormPage/RecipeFormPage';\nimport RecipeDetailPage from '../RecipeDetailPage/RecipeDetailPage';\n// import components\nimport NavBar from '../../components/NavBar/NavBar';\n// import utilities\nimport userService from '../../utils/userService';\n\nfunction App() {\n  const [user, setUser] = useState(userService.getUser());\n\n  const handleSignupOrLogin = () => {\n    setUser(userService.getUser());\n  }\n\n  const handleLogout = () => {\n    userService.logout();\n    setUser(null);\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <NavBar\n          user={user}\n          handleLogout={handleLogout}\n        />\n      </header>\n      <Switch>\n        <Route exact path='/' render={({ history }) => (\n          <LandingPage\n            history={history}\n            user={user}\n          />\n        )}/>\n        <Route exact path='/signup' render={({ history }) => (\n          <SignupPage \n            history={history}\n            handleSignup={handleSignupOrLogin}\n            user={user}\n          />\n        )}/>\n        <Route exact path='/login' render={({ history }) => (\n          <LoginPage\n            history={history}\n            handleLogin={handleSignupOrLogin}\n          />\n        )}/>\n        <Route exact path='/recipebook' render={({ history }) => (\n          <RecipeIndexPage\n            history={history}\n            user={user}\n          />\n        )}/>\n        <Route path=\"/recipebook/:id\" render={props => \n          <RecipeDetailPage \n            {...props}\n            user={user}\n          />\n        }/>\n        <Route exact path='/recipeform' render={({ history }) => (\n          <RecipeFormPage\n            history={history}\n            user={user}\n          />\n        )}/>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","/home/jermzblake/mycode/projects/krispykreations/src/components/NavBar/NavBar.jsx",[],"/home/jermzblake/mycode/projects/krispykreations/src/pages/SignupPage/SignupPage.jsx",[],"/home/jermzblake/mycode/projects/krispykreations/src/components/SignupForm/SignupForm.jsx",[],"/home/jermzblake/mycode/projects/krispykreations/src/utils/userService.js",[],"/home/jermzblake/mycode/projects/krispykreations/src/utils/tokenService.js",[],"/home/jermzblake/mycode/projects/krispykreations/src/pages/LoginPage/LoginPage.jsx",[],"/home/jermzblake/mycode/projects/krispykreations/src/utils/recipeService.js",[],"/home/jermzblake/mycode/projects/krispykreations/src/pages/LandingPage/LandingPage.jsx",[],"/home/jermzblake/mycode/projects/krispykreations/src/pages/RecipeFormPage/RecipeFormPage.jsx",[],"/home/jermzblake/mycode/projects/krispykreations/src/components/RecipeEntryForm/RecipeEntryForm.jsx",["73"],"import React, {useState} from 'react';\nimport { Link } from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport OutlinedInput from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport recipeService from '../../utils/recipeService';\n\nconst difficulties = [\n    {\n        value: 'Easy',\n        label: 'Easy'\n    },\n    {\n        value: 'Medium',\n        label: 'Medium'\n    },\n    {\n        value: 'Hard',\n        label: 'Hard'\n    }\n];\n\nconst categories = [\n    {\n        value: 'Breakfast',\n        label: 'Breakfast'\n    },\n    {\n        value: 'Lunch',\n        label: 'Lunch'\n    },\n    {\n        value: 'Dinner',\n        label: 'Dinner'\n    },\n    {\n        value: 'Treat',\n        label: 'Treat'\n    }\n];\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: '25ch',\n      },\n    },\n  }));\n\nfunction RecipeEntryForm (props) {\n    const classes = useStyles();\n    const [name, setName] = useState('');\n    const [ingredients, setIngredients] = useState('');\n    const [directions, setDirections] = useState('')\n    const [category, setCategory] = useState('Treat');\n    const [difficulty, setDifficulty] = useState('Medium');\n    const [prepTime, setPrepTime] = useState(null);\n    const [cookTime, setCookTime] = useState(null);\n    const [servings, setServings] = useState(null);\n    const [cuisineType, setCuisineType] = useState('');\n    const [image, setImage] = useState('');\n\n    const addEntry = async(e) => {\n        e.preventDefault();\n        await recipeService.createEntry({\n            name,\n            ingredients,\n            directions,\n            category,\n            difficulty,\n            prepTime,\n            cookTime,\n            servings,\n            cuisineType,\n            image\n        });\n        props.history.push('/recipebook');\n    }\n\n    const isFormInvalid = () => {\n        return !(name && ingredients && directions && category);\n    }\n\n    return (\n        <div>\n            <h1>Recipe Form</h1>\n            <br />\n            <br />\n            <form className={classes.root} autoComplete=\"off\" onSubmit={addEntry}>\n                <TextField \n                    label=\"Name\"\n                    onChange={e => setName(e.target.value)}\n                />\n                <TextField \n                    label=\"Cuisine\"\n                    onChange={e => setCuisineType(e.target.value)}\n                    helperText=\"Optional\"\n                    placeholder=\"Caribbean\"\n                />\n                <br /><br />\n                <TextField\n                    select \n                    label=\"Category\"\n                    value={category}\n                    onChange={e => setCategory(e.target.value)}\n                    helperText=\"Please select the category\"\n                >\n                    {categories.map((option) => (\n                        <MenuItem key={option.value} value={option.value}>\n                        {option.label}\n                        </MenuItem>\n                    ))}\n                </TextField>\n                <TextField\n                    select \n                    label=\"Difficulty\"\n                    value={difficulty}\n                    onChange={e => setDifficulty(e.target.value)}\n                    helperText=\"Please select the difficulty\"\n                >\n                    {difficulties.map((option) => (\n                        <MenuItem key={option.value} value={option.value}>\n                        {option.label}\n                        </MenuItem>\n                    ))}\n                </TextField>\n                <br /><br />\n                <TextField\n                    variant=\"outlined\"\n                    label=\"Ingredients\"\n                    multiline\n                    rows={4}\n                    placeholder=\"1 cup of LOVE\"\n                    helperText=\"Add a new ingredient on a new line (press enter to add line)\"\n                    onChange={e => setIngredients(e.target.value.split('\\n'))}\n                />\n                <TextField\n                    variant=\"outlined\"\n                    label=\"Directions\"\n                    multiline\n                    rows={4}\n                    onChange={e => setDirections(e.target.value)}\n                />\n                <br /><br />\n                <FormControl>\n                    <InputLabel htmlFor=\"prep-time\">Prep Time</InputLabel>\n                    <OutlinedInput id=\"prep-time\" type=\"number\" onChange={e => setPrepTime(e.target.value)} aria-describedby=\"prep-helper-text\" />\n                    <FormHelperText id=\"prep-helper-text\">Enter prep time in minutes</FormHelperText>\n                </FormControl>\n                <FormControl>\n                    <InputLabel htmlFor=\"cook-time\">Cook Time</InputLabel>\n                    <OutlinedInput id=\"cook-time\" type=\"number\" onChange={e => setCookTime(e.target.value)} aria-describedby=\"cook-helper-text\" />\n                    <FormHelperText id=\"cook-helper-text\">Enter cook time in minutes</FormHelperText>\n                </FormControl>\n                <FormControl>\n                    <InputLabel htmlFor=\"serving-size\">Serving Size</InputLabel>\n                    <OutlinedInput id=\"serving-size\" type=\"number\" onChange={e => setServings(e.target.value)} aria-describedby=\"serving-helper-text\" />\n                    <FormHelperText id=\"serving-helper-text\">Enter serving size</FormHelperText>\n                </FormControl>\n                <div>\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={isFormInvalid()}>Submit</Button>\n                    <Link to='/recipebook'>Cancel</Link>\n                </div>  \n            </form>\n        </div>\n    )\n}\n\nexport default RecipeEntryForm;","/home/jermzblake/mycode/projects/krispykreations/src/components/RecipeBookEntries/RecipeBookEntries.jsx",[],"/home/jermzblake/mycode/projects/krispykreations/src/pages/RecipeIndexPage/RecipeIndexPage.jsx",["74","75"],"import React, {useState, useEffect} from 'react';\nimport {Link, Route} from 'react-router-dom';\nimport './RecipeIndexPage.css';\nimport recipeService from '../../utils/recipeService';\nimport RecipeBookEntries from '../../components/RecipeBookEntries/RecipeBookEntries';\nimport RecipeDetailPage from '../RecipeDetailPage/RecipeDetailPage';\n\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     flexGrow: 1,\n//   },\n//   paper: {\n//     padding: theme.spacing(2),\n//     margin: 'auto',\n//     maxWidth: 500,\n//   },\n// }));\n\nfunction RecipeIndexPage(props) {\n    // const classes = useStyles();\n    const [recipeBook, setRecipeBook] = useState('');\n\n    useEffect(() => {\n        if (!recipeBook) return loadRecipeBook();\n    })\n\n  // I think this function will be necessary for updating state after CRUD \n    const updateRecipeBook = (updatedBook) => {\n        setRecipeBook({ updatedBook })\n    }\n\n    const loadRecipeBook = async () => {\n        const currentRecipeBookEntries = await recipeService.index().then(res => res.recipeEntries);\n        setRecipeBook(currentRecipeBookEntries);\n    }\n\n    if(recipeBook && recipeBook.length > 0) {\n        return (\n            <div>\n                <h1>{props.user.name}'s Recipe Book</h1>\n                <Link to='/recipeform'>Create New Recipe</Link>\n                <div className='page-container'>\n                    {recipeBook.map((entry, idx) => (\n                        <RecipeBookEntries\n                            recipeEntry={entry}\n                            updateRecipeBook={updateRecipeBook}\n                            {...props}\n                            key={idx}\n                        />   \n                    ))}\n                </div>\n                {/* <Route path=\"/recipebook/:id\" render={props => \n                    <RecipeDetailPage \n                        {...props}\n                        updateRecipeBook={updateRecipeBook}\n                        recipeBook={recipeBook}\n                    />\n                }/> */}\n            </div>\n        )\n    }\n    return (\n        <>\n        <h1>{props.user.name}'s Recipe Book</h1>\n        <Link to='/recipeform'>You have no recipes. Add one!</Link>\n        </>\n    )\n\n}\n\nexport default RecipeIndexPage;","/home/jermzblake/mycode/projects/krispykreations/src/pages/RecipeDetailPage/RecipeDetailPage.jsx",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":1,"column":8,"nodeType":"82","messageId":"83","endLine":1,"endColumn":12},{"ruleId":"80","severity":1,"message":"84","line":67,"column":19,"nodeType":"82","messageId":"83","endLine":67,"endColumn":27},{"ruleId":"80","severity":1,"message":"85","line":2,"column":15,"nodeType":"82","messageId":"83","endLine":2,"endColumn":20},{"ruleId":"80","severity":1,"message":"86","line":6,"column":8,"nodeType":"82","messageId":"83","endLine":6,"endColumn":24},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'setImage' is assigned a value but never used.","'Route' is defined but never used.","'RecipeDetailPage' is defined but never used.","no-global-assign","no-unsafe-negation"]