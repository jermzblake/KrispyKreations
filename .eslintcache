[{"/home/jermzblake/mycode/projects/krispykreations/src/index.js":"1","/home/jermzblake/mycode/projects/krispykreations/src/reportWebVitals.js":"2","/home/jermzblake/mycode/projects/krispykreations/src/pages/App/App.js":"3","/home/jermzblake/mycode/projects/krispykreations/src/components/NavBar/NavBar.jsx":"4","/home/jermzblake/mycode/projects/krispykreations/src/pages/SignupPage/SignupPage.jsx":"5","/home/jermzblake/mycode/projects/krispykreations/src/components/SignupForm/SignupForm.jsx":"6","/home/jermzblake/mycode/projects/krispykreations/src/utils/userService.js":"7","/home/jermzblake/mycode/projects/krispykreations/src/utils/tokenService.js":"8","/home/jermzblake/mycode/projects/krispykreations/src/pages/LoginPage/LoginPage.jsx":"9","/home/jermzblake/mycode/projects/krispykreations/src/utils/recipeService.js":"10","/home/jermzblake/mycode/projects/krispykreations/src/pages/LandingPage/LandingPage.jsx":"11","/home/jermzblake/mycode/projects/krispykreations/src/pages/RecipeFormPage/RecipeFormPage.jsx":"12","/home/jermzblake/mycode/projects/krispykreations/src/components/RecipeEntryForm/RecipeEntryForm.jsx":"13","/home/jermzblake/mycode/projects/krispykreations/src/components/RecipeBookEntries/RecipeBookEntries.jsx":"14","/home/jermzblake/mycode/projects/krispykreations/src/pages/RecipeIndexPage/RecipeIndexPage.jsx":"15","/home/jermzblake/mycode/projects/krispykreations/src/pages/RecipeDetailPage/RecipeDetailPage.jsx":"16","/home/jermzblake/mycode/projects/krispykreations/src/components/IngredientList/IngredientList.jsx":"17","/home/jermzblake/mycode/projects/krispykreations/src/pages/RecipeUpdatePage/RecipeUpdatePage.jsx":"18","/home/jermzblake/mycode/projects/krispykreations/src/components/RecipeUpdateForm/RecipeUpdateForm.jsx":"19"},{"size":587,"mtime":1610662262640,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1610659218378,"results":"22","hashOfConfig":"21"},{"size":2437,"mtime":1612924059183,"results":"23","hashOfConfig":"21"},{"size":864,"mtime":1611001952338,"results":"24","hashOfConfig":"21"},{"size":427,"mtime":1611000306582,"results":"25","hashOfConfig":"21"},{"size":2499,"mtime":1612906998197,"results":"26","hashOfConfig":"21"},{"size":1123,"mtime":1611609716745,"results":"27","hashOfConfig":"21"},{"size":757,"mtime":1611434322439,"results":"28","hashOfConfig":"21"},{"size":1586,"mtime":1611179860602,"results":"29","hashOfConfig":"21"},{"size":2255,"mtime":1612978489060,"results":"30","hashOfConfig":"21"},{"size":447,"mtime":1612565958499,"results":"31","hashOfConfig":"21"},{"size":456,"mtime":1612565958500,"results":"32","hashOfConfig":"21"},{"size":6247,"mtime":1612977828718,"results":"33","hashOfConfig":"21"},{"size":724,"mtime":1612906998190,"results":"34","hashOfConfig":"21"},{"size":1644,"mtime":1612907037023,"results":"35","hashOfConfig":"21"},{"size":1854,"mtime":1612924065931,"results":"36","hashOfConfig":"21"},{"size":1599,"mtime":1612906998181,"results":"37","hashOfConfig":"21"},{"size":460,"mtime":1612924200499,"results":"38","hashOfConfig":"21"},{"size":7841,"mtime":1612986857162,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"u0crha",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/jermzblake/mycode/projects/krispykreations/src/index.js",[],["81","82"],"/home/jermzblake/mycode/projects/krispykreations/src/reportWebVitals.js",[],"/home/jermzblake/mycode/projects/krispykreations/src/pages/App/App.js",["83"],"import logo from '../../logo.svg';\nimport './App.css';\nimport React, { useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n// import pages\nimport SignupPage from '../SignupPage/SignupPage';\nimport LoginPage from '../LoginPage/LoginPage';\nimport RecipeIndexPage from '../RecipeIndexPage/RecipeIndexPage';\nimport LandingPage from '../LandingPage/LandingPage';\nimport RecipeFormPage from '../RecipeFormPage/RecipeFormPage';\nimport RecipeDetailPage from '../RecipeDetailPage/RecipeDetailPage';\nimport RecipeUpdatePage from '../RecipeUpdatePage/RecipeUpdatePage';\n// import components\nimport NavBar from '../../components/NavBar/NavBar';\n// import utilities\nimport userService from '../../utils/userService';\n\nfunction App() {\n  const [user, setUser] = useState(userService.getUser());\n\n  const handleSignupOrLogin = () => {\n    setUser(userService.getUser());\n  }\n\n  const handleLogout = () => {\n    userService.logout();\n    setUser(null);\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <NavBar\n          user={user}\n          handleLogout={handleLogout}\n        />\n      </header>\n      <Switch>\n        <Route exact path='/' render={({ history }) => (\n          <LandingPage\n            history={history}\n            user={user}\n          />\n        )}/>\n        <Route exact path='/signup' render={({ history }) => (\n          <SignupPage \n            history={history}\n            handleSignup={handleSignupOrLogin}\n            user={user}\n          />\n        )}/>\n        <Route exact path='/login' render={({ history }) => (\n          <LoginPage\n            history={history}\n            handleLogin={handleSignupOrLogin}\n          />\n        )}/>\n        <Route exact path='/recipebook' render={({ history }) => (\n          <RecipeIndexPage\n            history={history}\n            user={user}\n          />\n        )}/>\n        <Route path=\"/recipebook/:id\" render={props => \n          <RecipeDetailPage \n            {...props}\n            user={user}\n          />\n        }/>\n        <Route exact path='/recipeform' render={({ history }) => (\n          <RecipeFormPage\n            history={history}\n            user={user}\n          />\n        )}/>\n        <Route exact path='/recipe/edit/:id' render={props =>\n          <RecipeUpdatePage\n            {...props}\n            user={user}\n          />\n        }/>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","/home/jermzblake/mycode/projects/krispykreations/src/components/NavBar/NavBar.jsx",[],"/home/jermzblake/mycode/projects/krispykreations/src/pages/SignupPage/SignupPage.jsx",[],"/home/jermzblake/mycode/projects/krispykreations/src/components/SignupForm/SignupForm.jsx",[],"/home/jermzblake/mycode/projects/krispykreations/src/utils/userService.js",[],"/home/jermzblake/mycode/projects/krispykreations/src/utils/tokenService.js",[],"/home/jermzblake/mycode/projects/krispykreations/src/pages/LoginPage/LoginPage.jsx",[],"/home/jermzblake/mycode/projects/krispykreations/src/utils/recipeService.js",[],"/home/jermzblake/mycode/projects/krispykreations/src/pages/LandingPage/LandingPage.jsx",[],"/home/jermzblake/mycode/projects/krispykreations/src/pages/RecipeFormPage/RecipeFormPage.jsx",[],"/home/jermzblake/mycode/projects/krispykreations/src/components/RecipeEntryForm/RecipeEntryForm.jsx",["84"],"import React, {useState} from 'react';\nimport { Link } from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport OutlinedInput from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport recipeService from '../../utils/recipeService';\n\nconst difficulties = [\n    {\n        value: 'Easy',\n        label: 'Easy'\n    },\n    {\n        value: 'Medium',\n        label: 'Medium'\n    },\n    {\n        value: 'Hard',\n        label: 'Hard'\n    }\n];\n\nconst categories = [\n    {\n        value: 'Breakfast',\n        label: 'Breakfast'\n    },\n    {\n        value: 'Lunch',\n        label: 'Lunch'\n    },\n    {\n        value: 'Dinner',\n        label: 'Dinner'\n    },\n    {\n        value: 'Treat',\n        label: 'Treat'\n    }\n];\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: '25ch',\n      },\n    },\n  }));\n\nfunction RecipeEntryForm (props) {\n    const classes = useStyles();\n    const [name, setName] = useState('');\n    const [ingredients, setIngredients] = useState('');\n    const [directions, setDirections] = useState('')\n    const [category, setCategory] = useState('Treat');\n    const [difficulty, setDifficulty] = useState('Medium');\n    const [prepTime, setPrepTime] = useState(null);\n    const [cookTime, setCookTime] = useState(null);\n    const [servings, setServings] = useState(null);\n    const [cuisineType, setCuisineType] = useState('');\n    const [image, setImage] = useState('');\n\n    const addEntry = async(e) => {\n        e.preventDefault();\n        try{\n            await recipeService.createEntry({\n                name,\n                ingredients,\n                directions,\n                category,\n                difficulty,\n                prepTime,\n                cookTime,\n                servings,\n                cuisineType,\n                image\n            });\n            props.history.push('/recipebook');\n        } catch(err) {\n            console.log(err)\n        }\n    }\n\n    const isFormInvalid = () => {\n        return !(name && ingredients && directions && category);\n    }\n\n    return (\n        <div>\n            <h1>Recipe Form</h1>\n            <br />\n            <br />\n            <form className={classes.root} autoComplete=\"off\" onSubmit={addEntry}>\n                <TextField \n                    label=\"Name\"\n                    onChange={e => setName(e.target.value)}\n                />\n                <TextField \n                    label=\"Cuisine\"\n                    onChange={e => setCuisineType(e.target.value)}\n                    helperText=\"Optional\"\n                    placeholder=\"Caribbean\"\n                />\n                <br /><br />\n                <TextField\n                    select \n                    label=\"Category\"\n                    value={category}\n                    onChange={e => setCategory(e.target.value)}\n                    helperText=\"Please select the category\"\n                >\n                    {categories.map((option) => (\n                        <MenuItem key={option.value} value={option.value}>\n                        {option.label}\n                        </MenuItem>\n                    ))}\n                </TextField>\n                <TextField\n                    select \n                    label=\"Difficulty\"\n                    value={difficulty}\n                    onChange={e => setDifficulty(e.target.value)}\n                    helperText=\"Please select the difficulty\"\n                >\n                    {difficulties.map((option) => (\n                        <MenuItem key={option.value} value={option.value}>\n                        {option.label}\n                        </MenuItem>\n                    ))}\n                </TextField>\n                <br /><br />\n                <TextField\n                    variant=\"outlined\"\n                    label=\"Ingredients\"\n                    multiline\n                    rows={4}\n                    placeholder=\"1 cup of LOVE\"\n                    helperText=\"Add a new ingredient on a new line (press enter to add line)\"\n                    onChange={e => setIngredients(e.target.value.split('\\n'))}\n                />\n                <TextField\n                    variant=\"outlined\"\n                    label=\"Directions\"\n                    multiline\n                    rows={4}\n                    onChange={e => setDirections(e.target.value)}\n                />\n                <br /><br />\n                <FormControl>\n                    <InputLabel htmlFor=\"prep-time\">Prep Time</InputLabel>\n                    <OutlinedInput id=\"prep-time\" type=\"number\" onChange={e => setPrepTime(e.target.value)} aria-describedby=\"prep-helper-text\" />\n                    <FormHelperText id=\"prep-helper-text\">Enter prep time in minutes</FormHelperText>\n                </FormControl>\n                <FormControl>\n                    <InputLabel htmlFor=\"cook-time\">Cook Time</InputLabel>\n                    <OutlinedInput id=\"cook-time\" type=\"number\" onChange={e => setCookTime(e.target.value)} aria-describedby=\"cook-helper-text\" />\n                    <FormHelperText id=\"cook-helper-text\">Enter cook time in minutes</FormHelperText>\n                </FormControl>\n                <FormControl>\n                    <InputLabel htmlFor=\"serving-size\">Serving Size</InputLabel>\n                    <OutlinedInput id=\"serving-size\" type=\"number\" onChange={e => setServings(e.target.value)} aria-describedby=\"serving-helper-text\" />\n                    <FormHelperText id=\"serving-helper-text\">Enter serving size</FormHelperText>\n                </FormControl>\n                <div>\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={isFormInvalid()}>Submit</Button>\n                    <Link to='/recipebook'>Cancel</Link>\n                </div>  \n            </form>\n        </div>\n    )\n}\n\nexport default RecipeEntryForm;","/home/jermzblake/mycode/projects/krispykreations/src/components/RecipeBookEntries/RecipeBookEntries.jsx",[],"/home/jermzblake/mycode/projects/krispykreations/src/pages/RecipeIndexPage/RecipeIndexPage.jsx",[],"/home/jermzblake/mycode/projects/krispykreations/src/pages/RecipeDetailPage/RecipeDetailPage.jsx",[],"/home/jermzblake/mycode/projects/krispykreations/src/components/IngredientList/IngredientList.jsx",[],"/home/jermzblake/mycode/projects/krispykreations/src/pages/RecipeUpdatePage/RecipeUpdatePage.jsx",[],"/home/jermzblake/mycode/projects/krispykreations/src/components/RecipeUpdateForm/RecipeUpdateForm.jsx",["85"],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":1,"column":8,"nodeType":"92","messageId":"93","endLine":1,"endColumn":12},{"ruleId":"90","severity":1,"message":"94","line":67,"column":19,"nodeType":"92","messageId":"93","endLine":67,"endColumn":27},{"ruleId":"95","severity":1,"message":"96","line":76,"column":8,"nodeType":"97","endLine":76,"endColumn":10,"suggestions":"98"},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'setImage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getRecipeEntryState'. Either include it or remove the dependency array.","ArrayExpression",["101"],"no-global-assign","no-unsafe-negation",{"desc":"102","fix":"103"},"Update the dependencies array to be: [getRecipeEntryState]",{"range":"104","text":"105"},[2138,2140],"[getRecipeEntryState]"]